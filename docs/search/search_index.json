{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"api/","title":"docmumenta\u00e7\u00e3o da api","text":""},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.EncryptSuport","title":"<code>EncryptSuport</code>  <code>classmethod</code>","text":"<p>Classe interna para suporte a opera\u00e7\u00f5es de criptografia AES-128 relacionadas a M3U8.</p> <p>Fornece m\u00e9todos para obter a URL da chave de criptografia e o IV (vetor de inicializa\u00e7\u00e3o) associado, necess\u00e1rios para descriptografar conte\u00fados M3U8 protegidos por AES-128.</p> M\u00e9todos <ul> <li>get_url_key_m3u8: Extrai a URL da chave de criptografia e o IV de um conte\u00fado M3U8.</li> </ul>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.EncryptSuport.get_url_key_m3u8","title":"<code>get_url_key_m3u8(m3u8_content, player, headers=None)</code>  <code>staticmethod</code>","text":"<p>Extrai a URL da chave de criptografia AES-128 e o IV (vetor de inicializa\u00e7\u00e3o) de um conte\u00fado M3U8.</p> <p>Este m\u00e9todo analisa o conte\u00fado M3U8 para localizar a URL da chave de criptografia e o IV, se dispon\u00edvel. Em seguida, faz uma requisi\u00e7\u00e3o HTTP para obter a chave em formato hexadecimal.</p> <p>Parameters:</p> Name Type Description Default <code>m3u8_content</code> <code>str</code> <p>String contendo o conte\u00fado do arquivo M3U8.</p> required <code>player</code> <code>str</code> <p>URL base para formar o URL completo da chave, se necess\u00e1rio.</p> required <code>headers</code> <code>dict</code> <p>Cabe\u00e7alhos HTTP opcionais para a requisi\u00e7\u00e3o da chave. Se n\u00e3o fornecido,                       cabe\u00e7alhos padr\u00e3o ser\u00e3o utilizados.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <p>Um dicion\u00e1rio contendo as seguintes chaves: - 'key' (str): A chave de criptografia em hexadecimal. - 'iv' (str): O vetor de inicializa\u00e7\u00e3o (IV) em hexadecimal, se dispon\u00edvel.</p> <p>Caso n\u00e3o seja poss\u00edvel extrair a URL da chave ou o IV, retorna None.</p> <p>Examples:</p> <pre><code>m3u8_content = '''\n#EXTM3U\n#EXT-X-KEY:METHOD=AES-128,URI=\"https://example.com/key.bin\",IV=0x1234567890abcdef\n#EXTINF:10.0,\nhttp://example.com/segment1.ts\n'''\nplayer = \"https://example.com\"\nresult = EncryptSuport.get_url_key_m3u8(m3u8_content, player)\nprint(result)\n# Sa\u00edda esperada:\n# {'key': 'aabbccddeeff...', 'iv': '1234567890abcdef'}\n\n# Com cabe\u00e7alhos personalizados\nheaders = {\n    \"Authorization\": \"Bearer your_token\"\n}\nresult = EncryptSuport.get_url_key_m3u8(m3u8_content, player, headers=headers)\nprint(result)\n</code></pre> <p>Raises:</p> Type Description <code>HTTPError</code> <p>Se a requisi\u00e7\u00e3o HTTP para a chave falhar.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader","title":"<code>M3u8AnalyzerDownloader</code>  <code>classmethod</code>","text":"<p>Requer ffmpeg,use o comando configure-ffmpeg</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__clear_line","title":"<code>__clear_line()</code>  <code>staticmethod</code>","text":"<p>Limpa a linha atual no terminal de forma compat\u00edvel com diferentes sistemas.</p> <p>Essa fun\u00e7\u00e3o utiliza o caractere de retrocesso para mover o cursor para o in\u00edcio da linha e sobrescreve o conte\u00fado da linha com espa\u00e7os em branco, limpando assim a linha no terminal.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__descriptografar_segmento","title":"<code>__descriptografar_segmento(path, key, iv, logs=None)</code>  <code>staticmethod</code>","text":"<p>Descriptografa um segmento de v\u00eddeo se necess\u00e1rio.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Caminho do arquivo a ser descriptografado.</p> required <code>key</code> <code>bytes</code> <p>Chave de descriptografia em bytes.</p> required <code>iv</code> <code>bytes</code> <p>IV (vetor de inicializa\u00e7\u00e3o) em bytes.</p> required <code>logs</code> <code>bool</code> <p>Se True, exibe a barra de progresso.</p> <code>None</code> <p>Returns:     None</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__ffmpeg_concatener","title":"<code>__ffmpeg_concatener(output, extension)</code>  <code>staticmethod</code>","text":"<p>Concatena os segmentos de v\u00eddeo em um \u00fanico arquivo de v\u00eddeo usando FFmpeg.</p> <p>Parameters:</p> Name Type Description Default <code>output</code> <code>str</code> <p>Caminho de sa\u00edda para o v\u00eddeo final, incluindo o nome do arquivo e extens\u00e3o (ex: 'dir/nome.mp4').</p> required <code>extension</code> <code>str</code> <p>Extens\u00e3o dos arquivos de v\u00eddeo a serem concatenados (ex: '.ts').</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__filter_ffmpeg_output","title":"<code>__filter_ffmpeg_output(line, index)</code>  <code>staticmethod</code>","text":"<p>Filtra e imprime apenas as linhas que cont\u00eam a palavra 'Opening' na sa\u00edda do ffmpeg. Args:     line(bytes): Linha de sa\u00edda do ffmpeg.     index(int): \u00cdndice de progresso. Returns:      None</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__filter_ffmpeg_stdout","title":"<code>__filter_ffmpeg_stdout(line, filtering)</code>  <code>staticmethod</code>","text":"<p>Filtra apenas as linhas que cont\u00eam o filtro na sa\u00edda do ffmpeg. Args:     line(bytes): Linha de sa\u00edda do ffmpeg.     filtering(str): o filtro desejado Returns:      o valor da linha</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__handle_remove_readonly","title":"<code>__handle_remove_readonly(func, path, exc_info)</code>  <code>staticmethod</code>","text":"<p>Fun\u00e7\u00e3o de callback para lidar com arquivos somente leitura.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__ocute_terminal","title":"<code>__ocute_terminal()</code>  <code>staticmethod</code>","text":"<p>Verifica o sistema operacional do usu\u00e1rio e retorna uma inicial correspondente.</p> <p>O m\u00e9todo utiliza a biblioteca <code>platform</code> para identificar o sistema operacional e retorna: - 'w' para Windows - 'l' para Linux ou macOS (Darwin) - 'null' para outros sistemas operacionais n\u00e3o suportados</p> <p>Returns:</p> Name Type Description <code>str</code> <p>Inicial correspondente ao sistema operacional do usu\u00e1rio.</p> Example <p><pre><code>os_initial = M3U8Analyzer.__ocute_terminal()\nprint(os_initial)\n</code></pre> 'w','l', ou 'null', dependendo do sistema operacional</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__verific_path_bin","title":"<code>__verific_path_bin(binPath, typePath)</code>  <code>staticmethod</code>","text":"<p>Esta fun\u00e7\u00e3o verifica se um caminho de arquivo ou diret\u00f3rio existe e retorna True ou False.</p> <p>Parameters:</p> Name Type Description Default <code>binPath</code> <code>str</code> <p>O caminho a ser verificado.</p> required <code>typePath</code> <code>str</code> <p>O tipo de caminho a verificar ('file' para arquivo, 'dir' para diret\u00f3rio).</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True se o caminho existir e for do tipo especificado, False caso contr\u00e1rio.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__verificar_audio","title":"<code>__verificar_audio(path)</code>  <code>staticmethod</code>","text":"<p>Verifica se o v\u00eddeo cont\u00e9m faixas de \u00e1udio usando ffmpeg.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Caminho do arquivo de v\u00eddeo.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True se o v\u00eddeo contiver \u00e1udio, False caso contr\u00e1rio.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.__verificar_video","title":"<code>__verificar_video(path)</code>  <code>staticmethod</code>","text":"<p>Verifica se o v\u00eddeo cont\u00e9m faixas de v\u00eddeo usando ffmpeg.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Caminho do arquivo de v\u00eddeo.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True se o v\u00eddeo contiver v\u00eddeo, False caso contr\u00e1rio.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.downloader_and_remuxer_segments","title":"<code>downloader_and_remuxer_segments(url_playlist, output, key_hex=None, iv_hex=None, player=None, headers=None, segmentsType=None, logs=None)</code>  <code>staticmethod</code>","text":"<p>Baixa os segmentos de uma playlist M3U8, opcionalmente descriptografa-os, e os combina em um arquivo de v\u00eddeo.</p> <p>Este m\u00e9todo faz o download dos segmentos de uma playlist M3U8, possibilita a descriptografia dos segmentos usando uma chave e um IV fornecidos, e combina os segmentos em um \u00fanico arquivo de v\u00eddeo. O tipo de segmento (por exemplo, '.ts' ou '.m4s') pode ser especificado. Ap\u00f3s o processamento, o m\u00e9todo remove os arquivos tempor\u00e1rios criados durante o processo.</p> <p>Parameters:</p> Name Type Description Default <code>url_playlist</code> <code>str</code> <p>URL da playlist M3U8 contendo a lista de segmentos.</p> required <code>output</code> <code>str</code> <p>Caminho para o arquivo de sa\u00edda final (por exemplo, 'dir/nome.mp4').</p> required <code>key_hex</code> <code>Optional[str]</code> <p>Chave de descriptografia em formato hexadecimal (opcional).</p> <code>None</code> <code>iv_hex</code> <code>Optional[str]</code> <p>IV (vetor de inicializa\u00e7\u00e3o) em formato hexadecimal (opcional).</p> <code>None</code> <code>player</code> <code>Optional[str]</code> <p>URL base para os segmentos, se necess\u00e1rio para formar URLs completas.</p> <code>None</code> <code>headers</code> <code>Optional[dict]</code> <p>Cabe\u00e7alhos HTTP adicionais para as requisi\u00e7\u00f5es (opcional).</p> <code>None</code> <code>segmentsType</code> <code>Optional[str]</code> <p>Tipo de segmento de sa\u00edda, como '.ts' ou '.m4s' (opcional).</p> <code>None</code> <code>logs</code> <code>Optional[bool]</code> <p>Se True, exibe a sa\u00edda do processo de download e concatena\u00e7\u00e3o.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se a URL da playlist n\u00e3o for v\u00e1lida ou se n\u00e3o houver URL base para os segmentos quando necess\u00e1rio.</p> <code>OSError</code> <p>Se houver erros ao remover arquivos tempor\u00e1rios ou o diret\u00f3rio tempor\u00e1rio.</p> <code>RequestException</code> <p>Se ocorrer um erro ao fazer a requisi\u00e7\u00e3o HTTP.</p> <p>Examples:</p> <pre><code>url_playlist = \"https://example.com/playlist.m3u8\"\noutput = \"output/video.mp4\"\nkey_hex = \"00112233445566778899aabbccddeeff\"\niv_hex = \"00112233445566778899aabbccddeeff\"\nplayer = \"https://example.com/\"\nheaders = {\n    \"Accept\": \"application/json\",\n    \"User-Agent\": \"CustomAgent/1.0\"\n}\nsegmentsType = \".ts\"\n\nM3u8Analyzer.downloader_and_remuxer_segments(\n    url_playlist=url_playlist,\n    output=output,\n    key_hex=key_hex,\n    iv_hex=iv_hex,\n    player=player,\n    headers=headers,\n    segmentsType=segmentsType,\n    logs=True\n)\n</code></pre> Notes <ul> <li>O m\u00e9todo cria um diret\u00f3rio tempor\u00e1rio para armazenar os segmentos baixados e, em seguida, remove-o ap\u00f3s a concatena\u00e7\u00e3o.</li> <li>Se ocorrer um erro durante a requisi\u00e7\u00e3o HTTP ou o processo de concatena\u00e7\u00e3o, o m\u00e9todo tentar\u00e1 remover arquivos tempor\u00e1rios criados.</li> <li>A chave e o IV fornecidos s\u00e3o usados para descriptografar os segmentos se fornecidos; caso contr\u00e1rio, os segmentos s\u00e3o baixados diretamente.</li> </ul>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.ffmpegImage","title":"<code>ffmpegImage(commands, logs=None, callback=None)</code>  <code>staticmethod</code>","text":"<p>Executa comandos personalizados no FFmpeg e processa a sa\u00edda.</p> <p>Este m\u00e9todo permite executar comandos FFmpeg fornecidos pelo usu\u00e1rio e oferece a op\u00e7\u00e3o de visualizar a sa\u00edda do FFmpeg em tempo real. Al\u00e9m disso, \u00e9 poss\u00edvel fornecer uma fun\u00e7\u00e3o de callback que ser\u00e1 chamada com cada linha de sa\u00edda gerada pelo FFmpeg.</p> <p>Parameters:</p> Name Type Description Default <code>commands</code> <code>list</code> <p>Lista de argumentos de comando para o FFmpeg. O bin\u00e1rio do FFmpeg ser\u00e1 adicionado automaticamente              no in\u00edcio da lista de comandos fornecida.</p> required <code>logs</code> <code>Optional[bool]</code> <p>Se True, exibe a sa\u00edda do FFmpeg no console. Se False ou None, a sa\u00edda \u00e9 suprimida.</p> <code>None</code> <code>callback</code> <code>Optional[callable]</code> <p>Fun\u00e7\u00e3o opcional que ser\u00e1 chamada com cada linha de sa\u00edda gerada pelo FFmpeg.                             A fun\u00e7\u00e3o deve aceitar um argumento, que \u00e9 a linha de sa\u00edda como uma string.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p> <p>Raises:</p> Type Description <code>TypeError</code> <p>Se o par\u00e2metro 'commands' n\u00e3o for uma lista.</p> <p>Examples:</p> <pre><code># Para executar um comando FFmpeg e exibir a sa\u00edda\nffmpegImage(\n    commands=['-i', 'input.mp4', '-vf', 'scale=1280:720', 'output.mp4'],\n    logs=True\n)\n\n# Para executar um comando FFmpeg com uma fun\u00e7\u00e3o de callback para processar a sa\u00edda\ndef process_output(line):\n    print(f\"Sa\u00edda do FFmpeg: {line}\")\n\nffmpegImage(\n    commands=['-i', 'input.mp4', '-vf', 'scale=1280:720', 'output.mp4'],\n    callback=process_output\n)\n</code></pre> Notes <ul> <li>O par\u00e2metro <code>commands</code> deve ser uma lista de argumentos de linha de comando v\u00e1lidos para o FFmpeg. O bin\u00e1rio do FFmpeg \u00e9 automaticamente adicionado \u00e0 lista de comandos.</li> <li>Se <code>logs</code> for True, a sa\u00edda do FFmpeg ser\u00e1 exibida no console, removendo as linhas em branco.</li> <li>Se <code>callback</code> for fornecido, a fun\u00e7\u00e3o ser\u00e1 chamada com cada linha de sa\u00edda do FFmpeg, permitindo processamento personalizado da sa\u00edda.</li> <li>O m\u00e9todo \u00e9 capaz de ocultar a janela do terminal no Windows e suprimir a sa\u00edda no Linux conforme a configura\u00e7\u00e3o do terminal.</li> </ul>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.ffmpeg_donwloader","title":"<code>ffmpeg_donwloader(input_url, output, type_playlist, resolution=None, logs=None)</code>  <code>staticmethod</code>","text":"<p>Baixa um v\u00eddeo ou \u00e1udio usando FFmpeg a partir de uma URL de playlist M3U8.</p> <p>Este m\u00e9todo utiliza FFmpeg para baixar e salvar v\u00eddeo ou \u00e1udio de uma URL M3U8. Dependendo do tipo de playlist ('audio' ou 'video'), o m\u00e9todo pode especificar a resolu\u00e7\u00e3o para v\u00eddeos ou escolher um formato padr\u00e3o para \u00e1udios.</p> <p>Parameters:</p> Name Type Description Default <code>input_url</code> <code>str</code> <p>URL da playlist M3U8 contendo os segmentos de v\u00eddeo ou \u00e1udio.</p> required <code>output</code> <code>str</code> <p>Caminho para o arquivo final a ser salvo, com extens\u00e3o apropriada (por exemplo, 'dir/nome.mp4' ou 'dir/nome.mp3').</p> required <code>type_playlist</code> <code>str</code> <p>Tipo da playlist, deve ser 'audio' ou 'video'.</p> required <code>resolution</code> <code>Optional[str]</code> <p>Define a resolu\u00e7\u00e3o desejada para o v\u00eddeo ('lower', 'medium', 'high'). Ignorado para \u00e1udio.</p> <code>None</code> <code>logs</code> <code>Optional[bool]</code> <p>Se True, exibe a sa\u00edda do FFmpeg. Se False ou None, a sa\u00edda \u00e9 suprimida.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p> <p>Raises:</p> Type Description <code>SyntaxError</code> <p>Se o par\u00e2metro 'type_playlist' n\u00e3o for fornecido como string.</p> <code>ValueError</code> <p>Se o tipo de playlist fornecido n\u00e3o for 'audio' ou 'video'.</p> <p>Examples:</p> <pre><code># Para baixar um v\u00eddeo com resolu\u00e7\u00e3o 'medium'\nffmpeg_donwloader(\n    input_url=\"https://example.com/video_playlist.m3u8\",\n    output=\"output/video.mp4\",\n    type_playlist=\"video\",\n    resolution=\"medium\",\n    logs=True\n)\n\n# Para baixar \u00e1udio sem especificar resolu\u00e7\u00e3o\nffmpeg_donwloader(\n    input_url=\"https://example.com/audio_playlist.m3u8\",\n    output=\"output/audio.mp3\",\n    type_playlist=\"audio\",\n    logs=False\n)\n</code></pre> Notes <ul> <li>O comando FFmpeg \u00e9 executado de forma oculta no Windows e Linux para evitar exibi\u00e7\u00e3o de terminal.</li> <li>O par\u00e2metro <code>resolution</code> \u00e9 usado somente para v\u00eddeos, e o padr\u00e3o \u00e9 'high' se a resolu\u00e7\u00e3o n\u00e3o for reconhecida.</li> <li>A sa\u00edda do FFmpeg pode ser controlada com o par\u00e2metro <code>logs</code>, que, se definido como True, exibe as mensagens de progresso e erros.</li> </ul>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.M3u8AnalyzerDownloader.remuxer_audio_and_video","title":"<code>remuxer_audio_and_video(audioPath, videoPath, outputPath, logs=None)</code>  <code>staticmethod</code>","text":"<p>Remuxa um arquivo de \u00e1udio e um arquivo de v\u00eddeo em um \u00fanico arquivo MP4 usando FFmpeg.</p> <p>Este m\u00e9todo combina um arquivo de \u00e1udio e um arquivo de v\u00eddeo em um \u00fanico arquivo MP4 sem recodifica\u00e7\u00e3o dos streams, o que preserva a qualidade original dos arquivos de entrada.</p> <p>Parameters:</p> Name Type Description Default <code>audioPath</code> <code>str</code> <p>Caminho para o arquivo de \u00e1udio que ser\u00e1 combinado.</p> required <code>videoPath</code> <code>str</code> <p>Caminho para o arquivo de v\u00eddeo que ser\u00e1 combinado.</p> required <code>outputPath</code> <code>str</code> <p>Caminho de sa\u00edda para o arquivo remuxado, por exemplo, 'dir/nome.mp4'.</p> required <code>logs</code> <code>Optional[bool]</code> <p>Se True, exibe a sa\u00edda do FFmpeg durante o processamento. Se False ou None, a sa\u00edda \u00e9 suprimida.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se os caminhos dos arquivos de \u00e1udio ou v\u00eddeo n\u00e3o existirem.</p> <p>Examples:</p> <pre><code># Para remuxar \u00e1udio e v\u00eddeo em um \u00fanico arquivo MP4 com logs ativados\nremuxer_audio_and_video(\n    audioPath=\"path/to/audio.mp3\",\n    videoPath=\"path/to/video.mp4\",\n    outputPath=\"output/combined.mp4\",\n    logs=True\n)\n\n# Para remuxar \u00e1udio e v\u00eddeo em um arquivo MP4 sem exibir logs\nremuxer_audio_and_video(\n    audioPath=\"path/to/audio.mp3\",\n    videoPath=\"path/to/video.mp4\",\n    outputPath=\"output/combined.mp4\"\n)\n</code></pre> Notes <ul> <li>O comando FFmpeg usa a op\u00e7\u00e3o <code>-c copy</code> para copiar os streams de \u00e1udio e v\u00eddeo sem recodifica\u00e7\u00e3o, o que preserva a qualidade original.</li> <li>A remo\u00e7\u00e3o dos arquivos de \u00e1udio e v\u00eddeo de entrada ap\u00f3s o remuxing \u00e9 tentada, mas qualquer falha na remo\u00e7\u00e3o \u00e9 ignorada.</li> <li>O comportamento da exibi\u00e7\u00e3o de logs \u00e9 controlado pelo par\u00e2metro <code>logs</code>. Se <code>logs</code> for True, as mensagens de sa\u00edda do FFmpeg s\u00e3o impressas no console.</li> </ul>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.__init__","title":"<code>__init__()</code>","text":"<p>Classe para an\u00e1lise e manipula\u00e7\u00e3o de streams M3U8. Fornece m\u00e9todos para obter o conte\u00fado de URLs M3U8, identificar o tipo de conte\u00fado, extrair informa\u00e7\u00f5es de playlists, e suporte a decriptografia AES128 de segmentos.</p>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_audio_playlist","title":"<code>get_audio_playlist(m3u8_content)</code>  <code>staticmethod</code>","text":"<p>Extrai o URL da playlist de \u00e1udio de um conte\u00fado M3U8.</p> <p>Este m\u00e9todo analisa o conte\u00fado fornecido de um arquivo M3U8 e retorna o URL da playlist de \u00e1udio inclu\u00edda na playlist M3U8. O m\u00e9todo busca a linha que cont\u00e9m a chave <code>#EXT-X-MEDIA</code> e extrai a URL associada ao \u00e1udio.</p> <p>Parameters:</p> Name Type Description Default <code>m3u8_content</code> <code>str</code> <p>Conte\u00fado da playlist M3U8 como uma string. Deve incluir informa\u00e7\u00f5es sobre \u00e1udio se dispon\u00edveis.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>URL da playlist de \u00e1udio encontrada no conte\u00fado M3U8. Retorna <code>None</code> se a URL da playlist de \u00e1udio n\u00e3o for encontrada.</p> <p>Examples:</p> <pre><code># Exemplo 1\ncontent = '''\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\"audio\",NAME=\"English\",DEFAULT=YES,URI=\"http://example.com/audio.m3u8\"\n#EXT-X-STREAM-INF:BANDWIDTH=256000,AUDIO=\"audio\"\nhttp://example.com/stream.m3u8\n'''\nurl = M3u8Analyzer.get_audio_playlist(content)\nprint(url)  # Sa\u00edda esperada: 'http://example.com/audio.m3u8'\n\n# Exemplo 2\ncontent = '''\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\"audio\",NAME=\"French\",DEFAULT=NO,URI=\"http://example.com/french_audio.m3u8\"\n#EXT-X-STREAM-INF:BANDWIDTH=256000,AUDIO=\"audio\"\nhttp://example.com/stream.m3u8\n'''\nurl = M3u8Analyzer.get_audio_playlist(content)\nprint(url)  # Sa\u00edda esperada: 'http://example.com/french_audio.m3u8'\n\n# Exemplo 3\ncontent = '''\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-STREAM-INF:BANDWIDTH=256000\nhttp://example.com/stream.m3u8\n'''\nurl = M3u8Analyzer.get_audio_playlist(content)\nprint(url)  # Sa\u00edda esperada: None\n</code></pre>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_high_resolution","title":"<code>get_high_resolution(m3u8_content)</code>  <code>staticmethod</code>","text":"<p>Obt\u00e9m a maior resolu\u00e7\u00e3o dispon\u00edvel em um arquivo M3U8 e o URL correspondente.</p> <p>Este m\u00e9todo analisa o conte\u00fado de um arquivo M3U8 para identificar a maior resolu\u00e7\u00e3o dispon\u00edvel entre os fluxos de v\u00eddeo listados. Tamb\u00e9m retorna o URL associado a essa maior resolu\u00e7\u00e3o, se dispon\u00edvel.</p> <p>Parameters:</p> Name Type Description Default <code>m3u8_content</code> <code>str</code> <p>O conte\u00fado do arquivo M3U8 como uma string. Este conte\u00fado deve                 incluir as tags e atributos t\u00edpicos de uma playlist HLS.</p> required <p>Returns:</p> Name Type Description <code>tuple</code> <p>Uma tupla contendo: - str: A maior resolu\u00e7\u00e3o dispon\u00edvel no formato 'Largura x Altura' (ex.: '1920x1080'). - str: O URL correspondente \u00e0 maior resolu\u00e7\u00e3o. Se o URL n\u00e3o for encontrado,        retorna None. Se o tipo de playlist n\u00e3o contiver resolu\u00e7\u00f5es, retorna uma mensagem indicando o tipo de playlist.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o conte\u00fado do M3U8 n\u00e3o contiver resolu\u00e7\u00f5es e a fun\u00e7\u00e3o n\u00e3o conseguir         determinar o tipo de playlist.</p> <p>Examples:</p> <pre><code>m3u8_content = '''\n#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=500000,RESOLUTION=640x360\nhttp://example.com/360p.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=1000000,RESOLUTION=1280x720\nhttp://example.com/720p.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=3000000,RESOLUTION=1920x1080\nhttp://example.com/1080p.m3u8\n'''\nresult = M3u8Analyzer.get_high_resolution(m3u8_content)\nprint(result)  # Sa\u00edda esperada: ('1920x1080', 'http://example.com/1080p.m3u8')\n</code></pre> <pre><code>m3u8_content_no_resolutions = '''\n#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=500000\nhttp://example.com/360p.m3u8\n'''\nresult = M3u8Analyzer.get_high_resolution(m3u8_content_no_resolutions)\nprint(result)  # Sa\u00edda esperada: 'Playlist type: &lt;TIPO DA PLAYLIST&gt; not resolutions...'\n</code></pre>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_m3u8","title":"<code>get_m3u8(url_m3u8, headers=None, save_in_file=None, timeout=None)</code>  <code>staticmethod</code>","text":"<p>Obt\u00e9m o conte\u00fado de um arquivo M3U8 a partir de uma URL HLS.</p> <p>Este m\u00e9todo permite acessar, visualizar ou salvar playlists M3U8 utilizadas em transmiss\u00f5es de v\u00eddeo sob demanda.</p> <p>Args: url_m3u8 (str): A URL do arquivo M3U8 que voc\u00ea deseja acessar. headers (dict, optional): Cabe\u00e7alhos HTTP opcionais para a requisi\u00e7\u00e3o. Se n\u00e3o forem fornecidos, ser\u00e3o usados cabe\u00e7alhos padr\u00e3o. save_in_file (str, optional): Nome do arquivo para salvar o conte\u00fado M3U8. Se fornecido, o conte\u00fado da playlist ser\u00e1 salvo no diret\u00f3rio atual com a extens\u00e3o <code>.m3u8</code>. timeout (int, optional): Tempo m\u00e1ximo (em segundos) para aguardar uma resposta do servidor. O padr\u00e3o \u00e9 20 segundos.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>O conte\u00fado do arquivo M3U8 como uma string se a requisi\u00e7\u00e3o for bem-sucedida.</p> <code>None</code> <p>Se a requisi\u00e7\u00e3o falhar ou se o servidor n\u00e3o responder com sucesso.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se a URL n\u00e3o for v\u00e1lida ou se os headers n\u00e3o forem um dicion\u00e1rio.</p> <code>ConnectionAbortedError</code> <p>Se o servidor encerrar a conex\u00e3o inesperadamente.</p> <code>ConnectionRefusedError</code> <p>Se a conex\u00e3o for recusada pelo servidor.</p> <code>TimeoutError</code> <p>Se o tempo de espera pela resposta do servidor for excedido.</p> <code>ConnectionError</code> <p>Se n\u00e3o for poss\u00edvel se conectar ao servidor por outros motivos.</p> Example <pre><code>from m3u8_analyzer import M3u8Analyzer\n\nurl = \"https://example.com/playlist.m3u8\"\nheaders = {\"User-Agent\": \"Mozilla/5.0\"}\nplaylist_content = M3u8Analyzer.get_m3u8(url, headers=headers, save_in_file=\"minha_playlist\", timeout=30)\n\nif playlist_content:\n    print(\"Playlist obtida com sucesso!\")\nelse:\n    print(\"Falha ao obter a playlist.\")\n</code></pre>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_player_playlist","title":"<code>get_player_playlist(m3u8_url)</code>  <code>staticmethod</code>","text":"<p>Obt\u00e9m o caminho do diret\u00f3rio base do arquivo M3U8, excluindo o nome do arquivo.</p> <p>Este m\u00e9todo analisa a URL fornecida do arquivo M3U8 e retorna o caminho do diret\u00f3rio onde o arquivo M3U8 est\u00e1 localizado. A URL deve ser uma URL completa e o m\u00e9todo ir\u00e1 extrair o caminho do diret\u00f3rio base.</p> <p>Parameters:</p> Name Type Description Default <code>m3u8_url</code> <code>str</code> <p>A URL completa do arquivo M3U8. Pode incluir o nome do arquivo e o caminho do diret\u00f3rio.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>O caminho do diret\u00f3rio onde o arquivo M3U8 est\u00e1 localizado. Se a URL n\u00e3o contiver um arquivo M3U8,  retornar\u00e1 uma string vazia.</p> <p>Examples:</p> <pre><code># Exemplo 1\nurl = 'http://example.com/videos/playlist.m3u8'\npath = M3u8Analyzer.get_player_playlist(url)\nprint(path)  # Sa\u00edda esperada: 'http://example.com/videos/'\n\n# Exemplo 2\nurl = 'https://cdn.example.com/streams/segment.m3u8'\npath = M3u8Analyzer.get_player_playlist(url)\nprint(path)  # Sa\u00edda esperada: 'https://cdn.example.com/streams/'\n\n# Exemplo 3\nurl = 'https://example.com/playlist.m3u8'\npath = M3u8Analyzer.get_player_playlist(url)\nprint(path)  # Sa\u00edda esperada: 'https://example.com/'\n\n# Exemplo 4\nurl = 'https://example.com/videos/'\npath = M3u8Analyzer.get_player_playlist(url)\nprint(path)  # Sa\u00edda esperada: ''\n</code></pre>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_segments","title":"<code>get_segments(content)</code>  <code>staticmethod</code>","text":"<p>Extrai URLs de segmentos de uma playlist M3U8 e fornece informa\u00e7\u00f5es detalhadas sobre os segmentos.</p> <p>Este m\u00e9todo analisa o conte\u00fado de uma playlist M3U8 para extrair URLs de segmentos, identificar resolu\u00e7\u00f5es associadas, e retornar um dicion\u00e1rio com informa\u00e7\u00f5es sobre as URLs dos segmentos, a quantidade total de segmentos, e a ordem de cada URI.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>Conte\u00fado da playlist M3U8 como uma string. N\u00e3o deve ser uma URL. Deve incluir as informa\u00e7\u00f5es            sobre segmentos e, opcionalmente, informa\u00e7\u00f5es sobre resolu\u00e7\u00f5es e URLs de stream.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>Dict[str, List[Tuple[str, str]]]</code> <p>Um dicion\u00e1rio com as seguintes chaves: - 'uris' (List[str]): Lista de URLs dos segmentos. - 'urls' (List[str]): Lista de URLs de stream extra\u00eddas do conte\u00fado. - 'len' (int): Contagem total de URLs de stream encontradas. - 'enumerated_uris' (List[Tuple[int, str]]): Lista de tuplas contendo a ordem e o URL de cada segmento. - 'resolutions' (Dict[str, str]): Dicion\u00e1rio mapeando resolu\u00e7\u00f5es para suas URLs correspondentes.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o conte\u00fado fornecido for uma URL em vez de uma string de conte\u00fado M3U8.</p> <p>Examples:</p> <pre><code># Exemplo 1: Conte\u00fado simples de M3U8 com URLs de segmentos e stream\ncontent = '''\n#EXTM3U\n#EXTINF:10.0,\nhttp://example.com/segment1.ts\n#EXTINF:10.0,\nhttp://example.com/segment2.ts\n#EXT-X-STREAM-INF:BANDWIDTH=256000,RESOLUTION=1280x720\nhttp://example.com/stream_720p.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=512000,RESOLUTION=1920x1080\nhttp://example.com/stream_1080p.m3u8\n'''\nresult = M3u8Analyzer.get_segments(content)\nprint(result)\n# Sa\u00edda esperada:\n# {\n#     'uris': ['http://example.com/segment1.ts', 'http://example.com/segment2.ts'],\n#     'urls': ['http://example.com/stream_720p.m3u8', 'http://example.com/stream_1080p.m3u8'],\n#     'len': 2,\n#     'enumerated_uris': [(1, 'http://example.com/segment1.ts'), (2, 'http://example.com/segment2.ts')],\n#     'resolutions': {'1280x720': 'http://example.com/stream_720p.m3u8', '1920x1080': 'http://example.com/stream_1080p.m3u8'}\n# }\n\n# Exemplo 2: Conte\u00fado sem informa\u00e7\u00f5es de resolu\u00e7\u00e3o\ncontent = '''\n#EXTM3U\n#EXTINF:10.0,\nhttp://example.com/segment1.ts\n#EXTINF:10.0,\nhttp://example.com/segment2.ts\n'''\nresult = M3u8Analyzer.get_segments(content)\nprint(result)\n# Sa\u00edda esperada:\n# {\n#     'uris': ['http://example.com/segment1.ts', 'http://example.com/segment2.ts'],\n#     'urls': [],\n#     'len': 0,\n#     'enumerated_uris': [(1, 'http://example.com/segment1.ts'), (2, 'http://example.com/segment2.ts')],\n#     'resolutions': {}\n# }\n</code></pre>"},{"location":"api/#m3u8_analyzer_lib.M3u8Analyzer.M3u8Analyzer.get_type_m3u8_content","title":"<code>get_type_m3u8_content(m3u8_content)</code>  <code>staticmethod</code>","text":"<p>Determina o tipo de conte\u00fado de um arquivo M3U8 (Master ou Segmentos).</p> <p>Este m\u00e9todo analisa o conte\u00fado de um arquivo M3U8 para identificar se ele \u00e9 do tipo 'Master', 'Master encrypted', 'Segments', 'Segments encrypted', 'Segments Master', ou 'Desconhecido'. A identifica\u00e7\u00e3o \u00e9 baseada na presen\u00e7a de tags e chaves espec\u00edficas no conte\u00fado da playlist M3U8.</p> <p>Parameters:</p> Name Type Description Default <code>m3u8_content</code> <code>str</code> <p>O conte\u00fado do arquivo M3U8 como uma string. Pode ser uma URL ou o                 pr\u00f3prio conte\u00fado da playlist.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>O tipo de conte\u00fado identificado. Os poss\u00edveis valores s\u00e3o: - 'Master': Playlist mestre sem criptografia. - 'Master encrypted': Playlist mestre com criptografia. - 'Segments': Playlist de segmentos sem criptografia. - 'Segments encrypted': Playlist de segmentos com criptografia. - 'Segments .ts': Playlist de segmentos com URLs terminando em '.ts'. - 'Segments .m4s': Playlist de segmentos com URLs terminando em '.m4s'. - 'Segments Master': Playlist de segmentos com URLs variadas. - 'Desconhecido': Se o tipo n\u00e3o puder ser identificado.</p> <p>Examples:</p> <pre><code>m3u8_content_master = '''\n#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=500000\nhttp://example.com/master.m3u8\n'''\nresult = M3u8Analyzer.get_type_m3u8_content(m3u8_content_master)\nprint(result)  # Sa\u00edda esperada: 'Master'\n\nm3u8_content_master_encrypted = '''\n#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=500000\n#EXT-X-KEY:METHOD=AES-128,URI=\"http://example.com/key.key\"\nhttp://example.com/master.m3u8\n'''\nresult = M3u8Analyzer.get_type_m3u8_content(m3u8_content_master_encrypted)\nprint(result)  # Sa\u00edda esperada: 'Master encrypted'\n\nm3u8_content_segments = '''\n#EXTM3U\n#EXTINF:10,\nhttp://example.com/segment1.ts\n#EXTINF:10,\nhttp://example.com/segment2.ts\n'''\nresult = M3u8Analyzer.get_type_m3u8_content(m3u8_content_segments)\nprint(result)  # Sa\u00edda esperada: 'Segments .ts'\n\nm3u8_content_unknown = '''\n#EXTM3U\n#EXTINF:10,\nhttp://example.com/unknown_segment\n'''\nresult = M3u8Analyzer.get_type_m3u8_content(m3u8_content_unknown)\nprint(result)  # Sa\u00edda esperada: 'Segments Master'\n</code></pre> <p>Raises:</p> Type Description <code>Exception</code> <p>Em caso de erro durante o processamento do conte\u00fado, o m\u00e9todo retornar\u00e1 uma        mensagem de erro descritiva.</p>"},{"location":"exeptions/","title":"docmumenta\u00e7\u00e3o da api (exe\u00e7\u00f5es)","text":""},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8AnalyzerExceptions","title":"<code>M3u8AnalyzerExceptions</code>","text":"<p>               Bases: <code>Exception</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8AnalyzerExceptions.__init__","title":"<code>__init__(message='Erro na an\u00e1lise da playlist M3U8', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o base para erros relacionados \u00e0 an\u00e1lise de playlists M3U8.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro na an\u00e1lise da playlist M3U8\".</p> <code>'Erro na an\u00e1lise da playlist M3U8'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8AnalyzerExceptions.__str__","title":"<code>__str__()</code>","text":"<p>Retorna a representa\u00e7\u00e3o em string da exce\u00e7\u00e3o.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>Mensagem de erro formatada com detalhes adicionais, se presentes.</p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8DownloadError","title":"<code>M3u8DownloadError</code>","text":"<p>               Bases: <code>M3u8AnalyzerExceptions</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8DownloadError.__init__","title":"<code>__init__(message='Erro durante o download da playlist M3U8', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o para erros espec\u00edficos ocorridos durante o download de uma playlist M3U8.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro durante o download da playlist M3U8\".</p> <code>'Erro durante o download da playlist M3U8'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8Error","title":"<code>M3u8Error</code>","text":"<p>               Bases: <code>M3u8AnalyzerExceptions</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8Error.__init__","title":"<code>__init__(message='Erro inesperado na an\u00e1lise de playlist M3U8', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o para erros inesperados que n\u00e3o se encaixam em outras categorias.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro inesperado na an\u00e1lise de playlist M3U8\".</p> <code>'Erro inesperado na an\u00e1lise de playlist M3U8'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8FfmpegDownloadError","title":"<code>M3u8FfmpegDownloadError</code>","text":"<p>               Bases: <code>M3u8AnalyzerExceptions</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8FfmpegDownloadError.__init__","title":"<code>__init__(message='Erro durante o download da playlist M3U8 com ffmpeg', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o para erros espec\u00edficos ocorridos durante o download de uma playlist M3U8 usando ffmpeg.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro durante o download da playlist M3U8 com ffmpeg\".</p> <code>'Erro durante o download da playlist M3U8 com ffmpeg'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8FileError","title":"<code>M3u8FileError</code>","text":"<p>               Bases: <code>M3u8AnalyzerExceptions</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8FileError.__init__","title":"<code>__init__(message='Erro ao manipular o arquivo da playlist M3U8', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o para erros ocorridos ao manipular arquivos relacionados a playlists M3U8.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro ao manipular o arquivo da playlist M3U8\".</p> <code>'Erro ao manipular o arquivo da playlist M3U8'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8NetworkingError","title":"<code>M3u8NetworkingError</code>","text":"<p>               Bases: <code>M3u8AnalyzerExceptions</code></p>"},{"location":"exeptions/#m3u8_analyzer_lib.exeptions.M3u8NetworkingError.__init__","title":"<code>__init__(message='Erro de rede durante o download da playlist M3U8', errors=None)</code>","text":"<p>Exce\u00e7\u00e3o para erros relacionados \u00e0 rede durante o download de uma playlist M3U8.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>Mensagem descritiva do erro. Padr\u00e3o \u00e9 \"Erro de rede durante o download da playlist M3U8\".</p> <code>'Erro de rede durante o download da playlist M3U8'</code> <code>errors</code> <code>list</code> <p>Lista de erros adicionais ou detalhes para diagn\u00f3stico. Padr\u00e3o \u00e9 None.</p> <code>None</code>"},{"location":"iniciando/","title":"Iniciando","text":""},{"location":"iniciando/#visao-geral-de-como-usar-a-lib","title":"Vis\u00e3o Geral de como usar a lib","text":"<p>A biblioteca <code>m3u8_analyzer</code> facilita a an\u00e1lise e manipula\u00e7\u00e3o de playlists M3U8, com suporte para descriptografia, remuxagem e execu\u00e7\u00e3o de comandos FFmpeg.</p>"},{"location":"iniciando/#uso","title":"Uso","text":""},{"location":"iniciando/#exemplo-basico","title":"Exemplo B\u00e1sico","text":"<p>Aqui est\u00e1 um exemplo b\u00e1sico de uso da biblioteca:</p>"},{"location":"iniciando/#analise-e-manipulacao-de-playlists","title":"An\u00e1lise e Manipula\u00e7\u00e3o de Playlists","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Obtenha informa\u00e7\u00f5es sobre a playlist\ninfo = playlist.info()\nprint(info)\n\n# Filtre segmentos por resolu\u00e7\u00e3o\nresolution_url = playlist.filter_resolution(\"1920x1080\")\nprint(resolution_url)\n</code></pre>"},{"location":"iniciando/#uso-de-ffmpeg","title":"Uso de FFmpeg","text":"<pre><code>from m3u8_analyzer import M3u8Analyzer\n\n# Execute um comando FFmpeg\nM3u8Analyzer.M3u8AnalyzerDownloader.ffmpegImage(\n    commands=[\"-i\", \"input.mp4\", \"-vf\", \"scale=1280:720\", \"output.mp4\"],\n    logs=True,\n    callback=lambda line: print(f\"FFmpeg Output: {line}\")\n)\n</code></pre>"},{"location":"iniciando/#baixar-e-remuxar-usando-ffmpeg","title":"Baixar e Remuxar Usando FFmpeg","text":"<pre><code>from m3u8_analyzer import M3u8Analyzer\n\nanalyze = M3u8Analyzer()\n\nurl = 'https://playlist.m3u8'\noutput = 'final.mp4'\n\nanalyze.M3u8AnalyzerDownloader.ffmpeg_donwloader(\n    input_url=url, \n    output=output, \n    resolution='high', \n    type_playlist='video',\n    logs=True\n)\n</code></pre>"},{"location":"iniciando/#obter-segmentos","title":"Obter Segmentos","text":"<pre><code>from m3u8_analyzer import M3u8Analyzer\n\nanalyze = M3u8Analyzer()\n\nurl = 'https://playlist.m3u8'\nget = analyze.get_m3u8(url_m3u8=url)\nsegments = analyze.get_segments(content=get)\nprint(segments)\n</code></pre>"},{"location":"iniciando/#obter-player","title":"Obter Player","text":"<pre><code>from m3u8_analyzer import M3u8Analyzer\n\nanalyze = M3u8Analyzer()\n\nurl = 'https://player-video-ex/playlist.m3u8'\n\nplayer = analyze.get_player_playlist(m3u8_url=url)\n\nprint(player)\n</code></pre>"},{"location":"iniciando/#concatenar-audio-e-video","title":"Concatenar \u00c1udio e V\u00eddeo","text":"<pre><code>from m3u8_analyzer import M3u8Analyzer\n\nanalyze = M3u8Analyzer()\n\n# Paths dos arquivos\naudio = 'audio.mp3'\nvideo = 'video.mp4'\noutput = 'final.mp4'\n\nanalyze.M3u8AnalyzerDownloader.remuxer_audio_and_video(\n    audioPath=audio,\n    videoPath=video,\n    outputPath=output,\n    logs=True\n)\n</code></pre>"},{"location":"iniciando/#obter-uris-em-um-manifesto","title":"Obter URIs em um Manifesto","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Obtenha a lista de URIs dos segmentos\nuris = playlist.uris()\nprint(uris)\n</code></pre>"},{"location":"iniciando/#obter-resolucoes-disponiveis","title":"Obter Resolu\u00e7\u00f5es Dispon\u00edveis","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Obtenha as resolu\u00e7\u00f5es dispon\u00edveis\nresolutions = playlist.get_resolutions()\nprint(resolutions)\n</code></pre>"},{"location":"iniciando/#verificar-criptografia","title":"Verificar Criptografia","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Verifique se a playlist est\u00e1 criptografada\nis_encrypted = playlist.this_encrypted()\nprint(is_encrypted)\n</code></pre>"},{"location":"iniciando/#filtrar-resolucoes","title":"Filtrar Resolu\u00e7\u00f5es","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Filtre e obtenha a URL do segmento com a resolu\u00e7\u00e3o desejada\nresolution_url = playlist.filter_resolution(\"1920x1080\")\nprint(resolution_url)\n</code></pre>"},{"location":"iniciando/#obter-tipo-de-playlist","title":"Obter Tipo de Playlist","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Obtenha o tipo da playlist 'Master', 'Master encrypted', 'Segments', 'Segments encrypted', 'Segments Master','Desconhecido'\nplaylist_type = playlist.playlist_type()\nprint(playlist_type)\n</code></pre>"},{"location":"iniciando/#obter-versao-do-manifesto","title":"Obter Vers\u00e3o do Manifesto","text":"<pre><code>from m3u8_analyzer import wrapper_playlists\n\n\nplaylist = wrapper_playlists.parsing_m3u8(url=\"https://example.com/playlist.m3u8\")\n\n# Obtenha a vers\u00e3o do manifesto da playlist\nversion = playlist.version_manifest()\nprint(version)\n</code></pre>"},{"location":"iniciando/#contribuicao","title":"Contribui\u00e7\u00e3o","text":"<p>Para contribuir com a biblioteca, envie um pull request ou abra uma issue no reposit\u00f3rio GitHub.</p>"},{"location":"iniciando/#licenca","title":"Licen\u00e7a","text":"<p>Esta biblioteca \u00e9 licenciada sob a Licen\u00e7a MIT.</p>"},{"location":"instalacao/","title":"Instala\u00e7\u00e3o","text":""},{"location":"instalacao/#instalacao-do-pacote","title":"Instala\u00e7\u00e3o do pacote","text":"<p>Para instalar o pacote <code>m3u8-analyzer</code>, use o seguinte comando:</p> <pre><code>pip install m3u8-analyzer\n</code></pre>"}]}